/* 
 * My Title
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CategoryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CategoryApiTests
    {
        private CategoryApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CategoryApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CategoryApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CategoryApi
            //Assert.IsInstanceOfType(typeof(CategoryApi), instance, "instance is a CategoryApi");
        }

        
        /// <summary>
        /// Test CategoryDeleteCategory
        /// </summary>
        [Test]
        public void CategoryDeleteCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.CategoryDeleteCategory(id);
            //Assert.IsInstanceOf<Categories> (response, "response is Categories");
        }
        
        /// <summary>
        /// Test CategoryGetCategories
        /// </summary>
        [Test]
        public void CategoryGetCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CategoryGetCategories();
            //Assert.IsInstanceOf<List<Categories>> (response, "response is List<Categories>");
        }
        
        /// <summary>
        /// Test CategoryGetCategory
        /// </summary>
        [Test]
        public void CategoryGetCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //string format = null;
            //var response = instance.CategoryGetCategory(id, format);
            //Assert.IsInstanceOf<Categories> (response, "response is Categories");
        }
        
        /// <summary>
        /// Test CategoryPostCategory
        /// </summary>
        [Test]
        public void CategoryPostCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Categories category = null;
            //var response = instance.CategoryPostCategory(category);
            //Assert.IsInstanceOf<Categories> (response, "response is Categories");
        }
        
        /// <summary>
        /// Test CategoryPutCategory
        /// </summary>
        [Test]
        public void CategoryPutCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //Categories category = null;
            //var response = instance.CategoryPutCategory(id, category);
            //Assert.IsInstanceOf<System.IO.Stream> (response, "response is System.IO.Stream");
        }
        
    }

}
